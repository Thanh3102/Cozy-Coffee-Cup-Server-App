// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(uuid())
  username    String        @unique
  password    String
  name        String
  role        String
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  material    Material[]
  provider    Provider[]
  import_note Import_Note[]
  export_note Export_Note[]
}

model Material {
  id                 Int                  @id @default(autoincrement())
  name               String               @unique
  stock_quantity     Int
  expiration_date    DateTime?            @db.Date
  latest_import_date DateTime?
  latest_export_date DateTime?
  create_at          DateTime             @default(now())
  update_at          DateTime             @updatedAt
  created_by         String
  last_updated_by    String
  unit_id            Int
  active             Boolean              @default(true)
  user               User                 @relation(fields: [created_by], references: [id])
  unit               Unit                 @relation(fields: [unit_id], references: [id])
  import_note_detail Import_Note_Detail[]
  export_note_detail Export_Note_Detail[]
}

model Unit {
  id       Int        @id @default(autoincrement())
  name     String
  short    String?
  material Material[]
}

model Provider {
  id              String        @id @default(uuid())
  name            String        @unique
  address         String
  phone           String?       @unique
  email           String?       @unique
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt
  last_updated_by String
  created_by      String
  active          Boolean       @default(true)
  user            User          @relation(fields: [created_by], references: [id])
  Import_Note     Import_Note[]
}

model Import_Note {
  id                 Int                  @id @default(autoincrement())
  receiver_name      String
  note               String?
  active             Boolean              @default(true)
  created_at         DateTime             @default(now())
  created_by         String
  provider_id        String
  user               User                 @relation(fields: [created_by], references: [id])
  import_note_detail Import_Note_Detail[]
  provider           Provider             @relation(fields: [provider_id], references: [id])
}

model Import_Note_Detail {
  id             Int         @id @default(autoincrement())
  price          Int
  quantity       Float
  material_id    Int
  import_note_id Int
  material       Material    @relation(fields: [material_id], references: [id])
  import_note    Import_Note @relation(fields: [import_note_id], references: [id])
}

model Export_Note {
  id                 Int                  @id @default(autoincrement())
  picker_name        String
  created_by         String
  created_at         DateTime             @default(now())
  note               String?
  active             Boolean              @default(true)
  user               User                 @relation(fields: [created_by], references: [id])
  export_note_detail Export_Note_Detail[]
}

model Export_Note_Detail {
  id             Int         @id @default(autoincrement())
  quantity       Float
  material_id    Int
  export_note_id Int
  material       Material    @relation(fields: [material_id], references: [id])
  export_note    Export_Note @relation(fields: [export_note_id], references: [id])
}
